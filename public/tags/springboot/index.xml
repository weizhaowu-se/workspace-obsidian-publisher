<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Springboot on 一亩三分地</title>
    <link>https://blog.wuweizhao.com/tags/springboot/</link>
    <description>Recent content in Springboot on 一亩三分地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <lastBuildDate>Sun, 19 Apr 2020 16:05:14 +0000</lastBuildDate>
    <atom:link href="https://blog.wuweizhao.com/tags/springboot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>sprintboot&amp;docker&amp;HelloWorld</title>
      <link>https://blog.wuweizhao.com/posts/sprintboot-docker-helloworld/</link>
      <pubDate>Sun, 19 Apr 2020 16:05:14 +0000</pubDate>
      <guid>https://blog.wuweizhao.com/posts/sprintboot-docker-helloworld/</guid>
      <description>&lt;h1 id=&#34;sprintbootdockerhelloworld&#34;&gt;sprintboot&amp;amp;docker&amp;amp;HelloWorld&lt;/h1&gt;
&lt;h2 id=&#34;初始化springboot项目&#34;&gt;初始化springboot项目&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;初始化springboot项目&lt;/li&gt;
&lt;li&gt;新建HelloController&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@RestController
public class HelloController {
	@RequestMapping(value = &amp;#34;/&amp;#34;, method = RequestMethod.GET)
	public String hello() {
		return &amp;#34;hello docker demo&amp;#34;;
	}
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>mac下安装k8s&amp;docker及HelloWorld</title>
      <link>https://blog.wuweizhao.com/posts/mac%E4%B8%8B%E5%AE%89%E8%A3%85k8s-docker%E5%8F%8Ahelloworld/</link>
      <pubDate>Sat, 18 Apr 2020 17:05:04 +0000</pubDate>
      <guid>https://blog.wuweizhao.com/posts/mac%E4%B8%8B%E5%AE%89%E8%A3%85k8s-docker%E5%8F%8Ahelloworld/</guid>
      <description>&lt;h1 id=&#34;mac下安装k8sdocker及helloworld&#34;&gt;mac下安装k8s&amp;amp;docker及HelloWorld&lt;/h1&gt;
&lt;p&gt;安装环境：macOS&lt;/p&gt;
&lt;h2 id=&#34;安装docker&#34;&gt;安装docker&lt;/h2&gt;
&lt;p&gt;下载地址：https://hub.docker.com/editions/community/docker-ce-desktop-mac&lt;/p&gt;
&lt;p&gt;无脑点击下一步即可&lt;/p&gt;
&lt;h2 id=&#34;启用k8s&#34;&gt;启用k8s&lt;/h2&gt;
&lt;p&gt;打开docker&amp;mdash;preference&amp;mdash;kurbernets，勾上Enable Kurbernets，注意，勾选上之后需要下载文件，这个过程比较耗时，需要耐心等待&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring-eureka-hello-world</title>
      <link>https://blog.wuweizhao.com/posts/spring-eureka-hello-world/</link>
      <pubDate>Thu, 09 Apr 2020 22:22:16 +0000</pubDate>
      <guid>https://blog.wuweizhao.com/posts/spring-eureka-hello-world/</guid>
      <description>&lt;h1 id=&#34;spring-eureka-hello-world&#34;&gt;spring-eureka-hello-world&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;核心概念&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;spring-eureka：注册中心，实现服务注册和发现
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Hello world代码地址 [&lt;a href=&#34;https://github.com/weizhaowu-se/spring-eureka&#34;&gt;spring-eureka&lt;/a&gt;](&lt;a href=&#34;https://github.com/weizhaowu-se/spring-eureka&#34;&gt;https://github.com/weizhaowu-se/spring-eureka&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;注册中心server&#34;&gt;注册中心server&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;初始化springboot（此处略去）&lt;/li&gt;
&lt;li&gt;配置相关依赖&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
   &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;
   &amp;lt;artifactId&amp;gt;spring-cloud-starter-eureka-server&amp;lt;/artifactId&amp;gt;
   &amp;lt;version&amp;gt;1.4.7.RELEASE&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>springboot集成mybatis及pageHelper的使用</title>
      <link>https://blog.wuweizhao.com/posts/springboot%E9%9B%86%E6%88%90mybatis%E5%8F%8Apagehelper%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 02 Mar 2020 22:23:02 +0000</pubDate>
      <guid>https://blog.wuweizhao.com/posts/springboot%E9%9B%86%E6%88%90mybatis%E5%8F%8Apagehelper%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;h1 id=&#34;springboot集成mybatis及pagehelper的使用&#34;&gt;springboot集成mybatis及pageHelper的使用&lt;/h1&gt;
&lt;h2 id=&#34;简单集成&#34;&gt;简单集成&lt;/h2&gt;
&lt;h3 id=&#34;新增maven依赖&#34;&gt;新增maven依赖&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;
		&amp;lt;/dependency&amp;gt;

		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.mybatis.spring.boot&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;mybatis-spring-boot-starter&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;1.1.1&amp;lt;/version&amp;gt;
		&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>springboot数据库与mybatis</title>
      <link>https://blog.wuweizhao.com/posts/springboot%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8Emybatis/</link>
      <pubDate>Mon, 18 Mar 2019 21:01:35 +0000</pubDate>
      <guid>https://blog.wuweizhao.com/posts/springboot%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8Emybatis/</guid>
      <description>springboot数据库与mybatis入门配置 初始化工程 参考链接:https://blog.csdn.net/typa01_kk/article/details/76696618
数据库配置以及测试 在application.properties配置如下
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/testspring.datasource.username=rootspring.datasource.password=passwordspring.datasource.driver-class-name=com.mysql.jdbc.Driverspring.datasource.max-idle=10spring.datasource.max-wait=10000spring.datasource.min-idle=5spring.datasource.initial-size=5 通过jdbcTemplate的方式访问数据库
@RunWith(SpringRunner.class)@SpringBootTestpublic class DemoSpringbootApplicationTests {@AutowiredJdbcTemplate jdbcTemplate;@Testpublic void contextLoads() {String sql = &amp;#34;select * from user&amp;#34;;List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; resultList = jdbcTemplate.queryForList(sql);System.out.println(&amp;#34;query result:&amp;#34; + JSON.toJSONString(resultList));for (Map&amp;lt;String, Object&amp;gt; item: resultList) {for (Map.Entry&amp;lt;String, Object&amp;gt; entry: item.entrySet()) {System.out.println(entry.getKey() + &amp;#34;:&amp;#34; + entry.getValue().toString());System.out.println(&amp;#34;\n&amp;#34;);}}}} 日志打印如下:
query result:[{&amp;#34;id&amp;#34;:1,&amp;#34;name&amp;#34;:&amp;#34;test&amp;#34;}]id:1name:test 成功访问数据库.</description>
    </item>
  </channel>
</rss>
